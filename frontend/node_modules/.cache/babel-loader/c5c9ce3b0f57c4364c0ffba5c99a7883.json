{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL } from '../constants/productConstants';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure(); // get all products action\n\nexport const listProducts = (keyword = '', pageNumber = '') => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      error: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // product detail action , get single product\n\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      error: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const {\n      auth: {\n        token\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/product/${productId}/reviews`, review, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message\n    });\n    toast.error('You already reviewed ,you can  review only  comment');\n  }\n};","map":{"version":3,"sources":["C:/VS-MyWorkPlace/WEB-Codes/ReactPracticeAdvance/MERN-Ecommerce-Redux-MUI/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_LIST_REQUEST","PRODUCT_LIST_FAIL","PRODUCT_LIST_SUCCESS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_SUCCESS","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","toast","configure","listProducts","keyword","pageNumber","dispatch","type","data","get","payload","error","response","message","listProductDetails","id","createProductReview","productId","review","getState","auth","token","config","headers","Authorization","post"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {PRODUCT_LIST_REQUEST,PRODUCT_LIST_FAIL,PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL} from '../constants/productConstants'\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure()\r\n// get all products action\r\nexport const listProducts = (keyword = '',pageNumber = '') => async (dispatch) =>  {\r\n    try {\r\n        \r\n        dispatch({type : PRODUCT_LIST_REQUEST})\r\n\r\n        const {data}  = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type : PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type : PRODUCT_LIST_FAIL,\r\n            error : error.response && error.response.data.message  ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}\r\n\r\n// product detail action , get single product\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        \r\n        dispatch({\r\n            type: PRODUCT_DETAILS_REQUEST\r\n        })\r\n\r\n        const {data} = await axios.get(`/api/product/${id}`)\r\n\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_SUCCESS, \r\n            payload:data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_FAIL,\r\n         error : error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n    dispatch,\r\n    getState\r\n  ) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        auth: { token },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n  \r\n     const {data} =  await axios.post(`/api/product/${productId}/reviews`, review,config)\r\n  \r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        payload : data\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    \r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload: message,\r\n      })\r\n      toast.error('You already reviewed ,you can  review only  comment')\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}