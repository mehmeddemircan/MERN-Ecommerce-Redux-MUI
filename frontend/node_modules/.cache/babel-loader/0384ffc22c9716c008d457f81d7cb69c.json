{"ast":null,"code":"import axios from \"axios\";\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAIL, LOGOUT_SUCCESS, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL } from \"../constants/userConstants\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nexport const login = user => async dispatch => {\n  dispatch({\n    type: LOGIN_REQUEST\n  });\n  const res = await axios.post(`/api/login`, { ...user\n  });\n\n  try {\n    const {\n      token,\n      user\n    } = res.data;\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: {\n        token,\n        user\n      }\n    });\n    toast.success(\"Successfully logged in to website, We are happy to see you\");\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      error: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n    toast.error(error);\n  }\n}; // it provides when you refres the page , it kept you logged in to website\n\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: {\n          error: \"Failed to login\"\n        }\n      });\n    }\n  };\n}; // Logout\n\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(\"token\");\n  dispatch({\n    type: LOGOUT_SUCCESS\n  });\n};\nexport const register = user => async dispatch => {\n  let res;\n\n  try {\n    dispatch({\n      type: REGISTER_REQUEST\n    });\n    res = await axios.post(\"/api/register\", user); // Success\n\n    if (res.status >= 200 && res.status <= 205) {\n      dispatch({\n        type: REGISTER_SUCCESS\n      }); //   message\n\n      toast.success(\"Successfully created account , Have nice shopping day\");\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      }); //   fail\n    } else {\n      dispatch({\n        type: REGISTER_FAIL\n      });\n      toast.error(\"Failed to register\");\n    }\n  } catch (error) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: {\n        error: error.response.error\n      }\n    });\n    toast.error(\"This email already taken\");\n  }\n};\nexport const getUserDetails = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      auth: {\n        token\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(\"/api/profile/me\", config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      auth: {\n        token\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"/api/profile/update\", user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data.user\n    });\n    toast.success(\"Successfully Updated Account !\");\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/VS-MyWorkPlace/WEB-Codes/ReactPracticeAdvance/MERN-Ecommerce-Redux-MUI/frontend/src/actions/userActions.js"],"names":["axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAIL","LOGOUT_SUCCESS","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","toast","login","user","dispatch","type","res","post","token","data","localStorage","setItem","JSON","stringify","payload","success","error","response","message","isUserLoggedIn","getItem","parse","logout","removeItem","register","status","getUserDetails","getState","auth","config","headers","Authorization","get","updateUserProfile","put"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n} from \"../constants/userConstants\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const login = (user) => async (dispatch) => {\r\n  dispatch({ type: LOGIN_REQUEST });\r\n  const res = await axios.post(`/api/login`, {\r\n    ...user,\r\n  });\r\n\r\n  try {\r\n    const { token, user } = res.data;\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"user\", JSON.stringify(user));\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: {\r\n        token,\r\n        user,\r\n      },\r\n    });\r\n    toast.success(\"Successfully logged in to website, We are happy to see you\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      error:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n    toast.error(error);\r\n  }\r\n};\r\n\r\n// it provides when you refres the page , it kept you logged in to website\r\nexport const isUserLoggedIn = () => {\r\n  return async (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {\r\n          token,\r\n          user,\r\n        },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: { error: \"Failed to login\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Logout\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem(\"user\");\r\n  localStorage.removeItem(\"token\");\r\n\r\n  dispatch({ type: LOGOUT_SUCCESS });\r\n};\r\n\r\nexport const register = (user) => async (dispatch) => {\r\n  let res;\r\n  try {\r\n    dispatch({ type: REGISTER_REQUEST });\r\n\r\n    res = await axios.post(\"/api/register\", user);\r\n\r\n    // Success\r\n    if (res.status >= 200 && res.status <= 205) {\r\n      dispatch({ type: REGISTER_SUCCESS });\r\n      //   message\r\n      toast.success(\"Successfully created account , Have nice shopping day\");\r\n\r\n      const { token, user } = res.data;\r\n\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {\r\n          token,\r\n          user,\r\n        },\r\n      });\r\n      //   fail\r\n    } else {\r\n      dispatch({ type: REGISTER_FAIL });\r\n      toast.error(\"Failed to register\");\r\n    }\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n      payload: { error: error.response.error },\r\n    });\r\n    toast.error(\"This email already taken\");\r\n  }\r\n};\r\n\r\nexport const getUserDetails = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const { auth: {token} } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/profile/me\",config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data.user,\r\n    });\r\n  } catch (error) {\r\n    dispatch ({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: error.response.data.message\r\n    })\r\n\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n\r\n    const { auth: {token} } = getState()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    };\r\n    const { data } = await axios.put(\"/api/profile/update\",user,config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data.user,\r\n    });\r\n    toast.success(\"Successfully Updated Account !\");\r\n\r\n  } catch (error) {\r\n    dispatch ({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: error.response.data.message\r\n    })\r\n\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}